name: CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  release:
    types: [ published ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '9.0.x'
        
    - name: Restore dependencies 666
      run: dotnet restore
      
    - name: Build
      run: dotnet build --no-restore --configuration Release
      
    - name: Test
      run: dotnet test --no-build --configuration Release --verbosity normal --collect:"XPlat Code Coverage"
      
    - name: Debug event name
      run: echo "Event name is ${{ github.event_name }}"
    
  pack:
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'release'
    
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0 # Required for GitVersion
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '9.0.x'
        
    - name: Install GitVersion
      uses: gittools/actions/gitversion/setup@v0.10.2
      with:
        versionSpec: '5.x'
        
    - name: Determine Version
      uses: gittools/actions/gitversion/execute@v0.10.2
      id: gitversion
      
    - name: Restore dependencies
      run: dotnet restore
      
    - name: Build
      run: dotnet build --no-restore --configuration Release /p:Version=${{ steps.gitversion.outputs.AssemblySemVer }} /p:AssemblyVersion=${{ steps.gitversion.outputs.AssemblySemVer }} /p:InformationalVersion=${{ steps.gitversion.outputs.InformationalVersion }}
      
    - name: Pack
      run: dotnet pack HttpMataki.NET/HttpMataki.NET.csproj --no-build --configuration Release /p:PackageVersion=${{ steps.gitversion.outputs.NuGetVersionV2 }} --output ./artifacts
      
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: nuget-packages
        path: ./artifacts/*.nupkg

  publish:
    runs-on: ubuntu-latest
    needs: pack
    if: github.event_name == 'release'
    
    steps:
    - name: Download artifacts
      uses: actions/download-artifact@v4
      with:
        name: nuget-packages
        path: ./artifacts
        
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '9.0.x'
        
    - name: Publish to NuGet
      run: |
        for package in ./artifacts/*.nupkg; do
          echo "Publishing $package"
          dotnet nuget push "$package" --api-key ${{ secrets.NUGET_API_KEY }} --source https://api.nuget.org/v3/index.json --skip-duplicate
        done